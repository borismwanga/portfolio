import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import localfont from "next/font/local";
import "./globals.css";
import { ThemeProvider } from "@/components/theme-provider";
import Cursor from "@/components/Cursor";

const appelGarmondBold = localfont({
  src:[{
    path: "/fonts/AppleGaramond-Bold.ttf",
    weight: "bold",
  }],
  variable: "--font-appel-garmond-bold",
});
const appelGarmond = localfont({
  src:[{
    path: "/fonts/AppleGaramond.ttf",
    weight: "normal",
  }],
  variable: "--font-appel-garmond",
});
const appelGarmondItalic = localfont({
  src:[{
    path: "/fonts/AppleGaramond-Italic.ttf",
    weight: "normal",
  }],
  variable: "--font-appel-garmond-italic",
});
const appelGarmondBoldItalic = localfont({
  src:[{
    path: "/fonts/AppleGaramond-BoldItalic.ttf",
    weight: "bold",
  }],
  variable: "--font-appel-garmond-bold-italic",
});
const appelGarmondLight = localfont({
  src:[{
    path: "/fonts/AppleGaramond-Light.ttf",
    weight: "light",
  }],
  variable: "--font-appel-garmond-light",
});
const appelGarmondLightItalic = localfont({
  src:[{
    path: "/fonts/AppleGaramond-LightItalic.ttf",
    weight: "light",
  }],
  variable: "--font-appel-garmond-light-italic",
});

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Boris Mwanga - Software Engineer and Designer - Portfolio",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en" suppressHydrationWarning>
      <body
        className={`${geistSans.variable} ${geistMono.variable}
          antialiased
          ${appelGarmondBold.variable}
          ${appelGarmond.variable}
          ${appelGarmondItalic.variable}
          ${appelGarmondBoldItalic.variable}
          ${appelGarmondLight.variable}
          ${appelGarmondLightItalic.variable}
          w-screen h-dvh bg-[#F2F2F2] dark:bg-[#0d0d0d] 
          `
        }
      >
        <ThemeProvider
            attribute="class"
            defaultTheme="system"
            enableSystem
            disableTransitionOnChange
          >
            {children}
            <Cursor />
          </ThemeProvider>
        
      </body>
    </html>
  );
}
